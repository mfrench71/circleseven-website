name: Deploy Jekyll site to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow deployments to queue instead of cancelling
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        env:
          JEKYLL_ENV: production
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"

      - name: Install Node.js for minification
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install minification tools
        run: |
          npm install -g clean-css-cli
          npm install -g terser

      - name: Minify CSS files
        run: |
          find _site/assets/css -name "*.css" -type f ! -name "*.min.css" -exec sh -c 'cleancss -o "${0%.css}.min.css" "$0" && mv "${0%.css}.min.css" "$0"' {} \;

      - name: Minify JS files
        run: |
          find _site/assets/js -name "*.js" -type f ! -name "*.min.js" -exec sh -c 'terser "$0" -o "${0%.js}.min.js" -c -m && mv "${0%.js}.min.js" "$0"' {} \;

      - name: Add cache busting to JavaScript files
        run: |
          # Get short commit SHA for cache busting
          CACHE_VERSION=$(git rev-parse --short HEAD)
          echo "Using cache version: $CACHE_VERSION"

          # Replace version parameter in HTML files with commit SHA
          find _site -name "*.html" -type f -exec sed -i "s/app\.js?v=[0-9]\+/app.js?v=$CACHE_VERSION/g" {} \;
          find _site -name "*.html" -type f -exec sed -i "s/styles\.css?v=[0-9]\+/styles.css?v=$CACHE_VERSION/g" {} \;

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
